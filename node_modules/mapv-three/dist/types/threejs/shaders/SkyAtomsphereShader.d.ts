export namespace SkyAtomsphereShader {
    export namespace uniforms {
        namespace altitude {
            const value: number;
        }
        namespace iChannel0 {
            const value_1: null;
            export { value_1 as value };
        }
        namespace iChannelResolution0 {
            const value_2: number[];
            export { value_2 as value };
        }
        namespace iChannel1 {
            const value_3: null;
            export { value_3 as value };
        }
        namespace iChannelResolution1 {
            const value_4: number[];
            export { value_4 as value };
        }
        namespace iChannel2 {
            const value_5: null;
            export { value_5 as value };
        }
        namespace iChannelResolution2 {
            const value_6: number[];
            export { value_6 as value };
        }
        namespace cameraDirection {
            const value_7: any;
            export { value_7 as value };
        }
        namespace viewHeight {
            const value_8: number;
            export { value_8 as value };
        }
        namespace upDirection {
            const value_9: any;
            export { value_9 as value };
        }
        namespace tWeather {
            const value_10: null;
            export { value_10 as value };
        }
        namespace mixGrayFactor {
            const value_11: number;
            export { value_11 as value };
        }
    }
    export { mainVertShader as vertexShader };
    export const fragmentShader: string;
}
export namespace SkyAtomsphereTransmittanceShader {
    export namespace uniforms_1 {
        export namespace altitude_1 {
            const value_12: number;
            export { value_12 as value };
        }
        export { altitude_1 as altitude };
        export namespace viewHeight_1 {
            const value_13: number;
            export { value_13 as value };
        }
        export { viewHeight_1 as viewHeight };
    }
    export { uniforms_1 as uniforms };
    export { bufferVertexShader as vertexShader };
    const fragmentShader_1: string;
    export { fragmentShader_1 as fragmentShader };
}
export namespace SkyAtomsphereScatteringShader {
    export namespace uniforms_2 {
        export namespace altitude_2 {
            const value_14: number;
            export { value_14 as value };
        }
        export { altitude_2 as altitude };
        export namespace iChannel0_1 {
            const value_15: null;
            export { value_15 as value };
        }
        export { iChannel0_1 as iChannel0 };
        export namespace iChannelResolution0_1 {
            const value_16: number[];
            export { value_16 as value };
        }
        export { iChannelResolution0_1 as iChannelResolution0 };
        export namespace viewHeight_2 {
            const value_17: number;
            export { value_17 as value };
        }
        export { viewHeight_2 as viewHeight };
    }
    export { uniforms_2 as uniforms };
    export { bufferVertexShader as vertexShader };
    const fragmentShader_2: string;
    export { fragmentShader_2 as fragmentShader };
}
export namespace SkyAtomsphereViewShader {
    export namespace uniforms_3 {
        export namespace altitude_3 {
            const value_18: number;
            export { value_18 as value };
        }
        export { altitude_3 as altitude };
        export namespace iChannel0_2 {
            const value_19: null;
            export { value_19 as value };
        }
        export { iChannel0_2 as iChannel0 };
        export namespace iChannelResolution0_2 {
            const value_20: number[];
            export { value_20 as value };
        }
        export { iChannelResolution0_2 as iChannelResolution0 };
        export namespace iChannel1_1 {
            const value_21: null;
            export { value_21 as value };
        }
        export { iChannel1_1 as iChannel1 };
        export namespace iChannelResolution1_1 {
            const value_22: number[];
            export { value_22 as value };
        }
        export { iChannelResolution1_1 as iChannelResolution1 };
        export namespace viewHeight_3 {
            const value_23: number;
            export { value_23 as value };
        }
        export { viewHeight_3 as viewHeight };
        export namespace mixGrayFactor_1 {
            const value_24: number;
            export { value_24 as value };
        }
        export { mixGrayFactor_1 as mixGrayFactor };
    }
    export { uniforms_3 as uniforms };
    export { bufferVertexShader as vertexShader };
    const fragmentShader_3: string;
    export { fragmentShader_3 as fragmentShader };
}
