export class SlopeAnalysis {
    _coverageArea: any[]; /** 坡度分析范围，为位置数组，若不指定则计算全局坡度 */
    _slopeMap: any; /** 坡度颜色纹理 */
    _filterSlope: boolean; /** 是否根据maxSlope和minSlope过滤坡度 */
    _maxSlope: number;
    _minSlope: number;
    afterAddToEngine(engine: any): void;
    _engine: any;
    _clearPass: any;
    _clearMaskPass: any;
    _outputPass: any;
    _texturePass: any;
    _slopePass: any;
    _gammaPass: any;
    bindTerrain: (terrain: any) => void;
    _terrain: any;
    _setupUniforms(): {
        tDiffuse: {
            value: null;
        };
        tNormal: {
            value: null;
        };
        uTint: {
            value: null;
        };
        mvt_normalMatrix: {
            value: any;
        };
        mvt_normalInverseMatrix: {
            value: any;
        };
        slopeMap: {
            value: null;
        };
        minSlope: {
            value: any;
        };
        maxSlope: {
            value: any;
        };
    };
    _createVertexShader(): string;
    _createFragmentShader(): string;
    /**
     * 设置颜色分段信息
     * @param {object} colorStop 颜色分段信息
     * key值为坡度大小, 0-90
     * value为颜色值
     */
    setColorStop(colorStop: object): void;
    _updateUniforms: () => void;
    /**
     * 开始坡度分析
     */
    build(): void;
    _maskPass: any;
    /**
     * 结束坡度分析
     */
    close(): void;
}
