"use strict";
/**
 * @file 结果提示、自动完成类
 * @author hedongran [hdr01@126.com]
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var common_1 = require("../common");
var WrapperHOC_1 = tslib_1.__importDefault(require("../common/WrapperHOC"));
var eventsMap = [
    'confirm',
    'highlight'
];
var methodsMap = {};
var AutoComplete = /** @class */ (function (_super) {
    tslib_1.__extends(AutoComplete, _super);
    function AutoComplete(props) {
        var _this = _super.call(this, props) || this;
        _this.el = react_1.default.createRef();
        _this.options = [
            'location',
            'onSearchComplete',
            'input',
            'types'
        ];
        return _this;
    }
    AutoComplete.prototype.componentDidMount = function () {
        this.initialize();
    };
    AutoComplete.prototype.componentWillUnmount = function () {
        this.destroy();
    };
    AutoComplete.prototype.destroy = function () {
        if (this.ac) {
            this.ac.dispose();
            // @ts-ignore
            this.instance = this.ac = undefined;
        }
    };
    AutoComplete.prototype.initialize = function () {
        this.destroy();
        var opts = this.getOptions();
        if (!opts.input) {
            opts.input = this.el.current;
        }
        this.ac = this.instance = new BMapGL.Autocomplete(opts);
    };
    AutoComplete.prototype.render = function () {
        return (react_1.default.createElement(react_1.Fragment, null, !this.props.input && react_1.default.createElement("input", { className: "react-bmapgl-autocomplete", ref: this.el, style: this.props.style })));
    };
    return AutoComplete;
}(common_1.Component));
AutoComplete.defaultProps = {};
/**
 * Autocomplete是结果提示、自动完成类，不依赖地图进行展示，是仅调用地图API的服务。
 * @visibleName AutoComplete 结果提示
 */
exports.default = WrapperHOC_1.default(AutoComplete, eventsMap, methodsMap);
