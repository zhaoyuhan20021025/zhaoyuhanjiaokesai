/**
 * @file mapvgl的view图层管理类
 * @author hedongran
 * @email hdr01@126.com
 */
import React, { ReactElement, ReactNode } from 'react';
import { Component, MapChildrenProps } from '../common';
interface MapvglViewProps extends MapChildrenProps {
    /** 后处理效果数组 */
    effects?: ('bloom' | 'bright' | 'blur')[];
    preserveDrawingBuffer?: boolean;
}
export interface MapVGLViewChildrenProps {
    /** *mapvgl的图层管理器实例，来自父元素`<MapvglView>`的继承，无需手动传入 */
    view: MapVGL.View;
}
export interface ViewContextProps {
    map?: BMapGL.Map;
    view?: MapVGL.View;
}
export declare const ViewContext: React.Context<ViewContextProps>;
/**
 * 该组件将MapVGL的图层管理器使用`react`进行了一层封装。所有`<MapvglLayer>`组件需要作为该组件的子组件，文档参考[MapVGL图层管理器](https://mapv.baidu.com/gl/docs/View.html)
 * @visibleName MapvglView MapVGL图层管理器
 */
export default class MapvglView extends Component<MapvglViewProps> {
    static contextType: React.Context<import("../Map/Map").MapContextProps>;
    view: MapVGL.View;
    constructor(props: MapvglViewProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prevProps: MapvglViewProps): void;
    initialize(): void;
    /**
     * 在子元素props中附上view和map字段
     * @return {string|Element} children with props
     * @memberof MapvglView
     */
    renderChildren(children: ReactElement | ReactElement[]): ReactNode;
    render(): JSX.Element;
}
export {};
