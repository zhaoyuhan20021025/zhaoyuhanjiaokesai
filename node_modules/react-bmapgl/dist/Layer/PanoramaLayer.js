"use strict";
/**
 * @file 全景图层
 * @author hedongran [hdr01@126.com]
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Map_1 = require("../Map/Map");
var common_1 = require("../common");
;
/**
 * 该组件用于展示全景蓝色路网图层，注意，该组件只展示蓝色路网，不包括进入全景图功能
 * @visibleName PanoramaLayer 全景图层
 */
var PanoramaLayer = /** @class */ (function (_super) {
    tslib_1.__extends(PanoramaLayer, _super);
    function PanoramaLayer(props) {
        return _super.call(this, props) || this;
    }
    PanoramaLayer.prototype.componentDidMount = function () {
        this.initialize();
    };
    PanoramaLayer.prototype.componentDidUpdate = function (prevProps) {
        this.initialize();
    };
    PanoramaLayer.prototype.componentWillUnmount = function () {
        this.destroy();
    };
    PanoramaLayer.prototype.destroy = function () {
        if (this.tilelayer) {
            this.map.removeTileLayer(this.tilelayer);
            // @ts-ignore
            this.tilelayer = undefined;
        }
    };
    PanoramaLayer.prototype.initialize = function () {
        var map = this.map = this.getMap();
        if (!map) {
            return;
        }
        this.destroy();
        var tstyle = 'pl';
        var udtVersion = '20190102';
        var tilelayer = this.tilelayer = new BMapGL.TileLayer({
            transparentPng: true
        });
        tilelayer.zIndex = 110;
        // point为图块坐标，level为图块的级别，当地图需要显示特定级别的特定位置的图块时就会自动调用此方法，并提供这两个参数。
        tilelayer.getTilesUrl = function (point, level) {
            if (!point || level < 0) {
                return '';
            }
            var row = point.x;
            var col = point.y;
            var url = '//mapsv0.bdimg.com/tile/?udt=' + udtVersion
                + '&qt=tile&styles=' + tstyle + '&x=' + row + '&y=' + col + '&z=' + level;
            return url;
        };
        map.addTileLayer(this.tilelayer);
    };
    PanoramaLayer.prototype.render = function () {
        return null;
    };
    PanoramaLayer.contextType = Map_1.MapContext;
    return PanoramaLayer;
}(common_1.Component));
exports.default = PanoramaLayer;
