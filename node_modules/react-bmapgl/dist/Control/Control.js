"use strict";
/**
 * @file 控件基类
 * @author hedongran
 * @email hdr01@126.com
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var common_1 = require("../common");
var shallowequal_1 = tslib_1.__importDefault(require("shallowequal"));
var Map_1 = require("../Map/Map");
var Control = /** @class */ (function (_super) {
    tslib_1.__extends(Control, _super);
    function Control(props) {
        var _this = _super.call(this, props) || this;
        _this.options = [
            'anchor',
            'offset'
        ];
        return _this;
    }
    Control.prototype.componentDidUpdate = function (prevProps) {
        if (!this.map) {
            this.initialize();
            return;
        }
        var _a = this.props, anchor = _a.anchor, offset = _a.offset;
        var preAnchor = prevProps.anchor, preOffset = prevProps.offset;
        var isAnchorChanged = !shallowequal_1.default(anchor, preAnchor);
        var isOffsetChanged = !shallowequal_1.default(offset, preOffset);
        if (anchor && isAnchorChanged) {
            this.control.setAnchor(anchor);
        }
        if (offset && isOffsetChanged) {
            this.control.setOffset(offset);
        }
    };
    Control.prototype.componentDidMount = function () {
        this.initialize();
    };
    Control.prototype.componentWillUnmount = function () {
        this.destroy();
    };
    Control.prototype.destroy = function () {
        if (this.control && this.map) {
            this.map.removeControl(this.control);
            // @ts-ignore
            this.control = null;
        }
    };
    Control.prototype.initialize = function () {
        var map = this.map = this.getMap();
        if (!map) {
            return;
        }
        this.destroy();
        this.control = this.getControl();
        map.addControl(this.control);
    };
    Control.prototype.getControl = function () {
        throw new Error('Method getControl not implemented.');
    };
    Control.contextType = Map_1.MapContext;
    return Control;
}(common_1.Component));
exports.default = Control;
